@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;900&display=swap");
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
#colors

@colorBase #8c527e
@colorSub #f00
@colorFont #666
*/
/*
#colors

@colorFb #3a5a98
@colorTw #1da1f2
@colorLine #00b900
@colorFe #2bb24c
@colorHatena #00a4de
*/
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}
html.open,
body.open {
  overflow: hidden;
}

* {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style-type: none;
}

dl,
dt,
dd {
  margin: 0;
}

a {
  text-decoration: none;
}

p {
  margin: 0;
}

img {
  display: block;
}

.pc {
  display: none;
}

.sp {
  display: block;
}

@media screen and (min-width: 420px) {
  .pc {
    display: block;
  }

  .sp {
    display: none;
  }
}
html {
  font-size: 14px;
  font-family: "Noto Sans JP", sans-serif, "游ゴシック", Yu Gothic, "ヒラギノ角ゴ Pro W3", Hiragino Kaku Gothic Pro, "メイリオ", Meiryo, Osaka, "ＭＳ Ｐゴシック", MS PGothic, verdana,sans-serif;
  color: #4D4D4D;
  font-weight: 500;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  letter-spacing: 0.05em;
}

@media screen and (min-width: 768px) {
  html {
    font-size: 16px;
  }
}
body, html {
  background-color: #F4F6F6;
}

.l-section {
  margin: 0 auto;
  padding: 120px 0 120px;
  width: 100%;
  max-width: 1100px;
}

@media screen and (min-width: 1024px) {
  .l-section {
    padding: 180px 0 180px;
  }
}
.a-title {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 0 10px;
  padding: 0 0 30px;
  color: #333;
}
.a-title::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 68px;
  height: 2px;
  background-color: #5FB1DE;
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0);
}
.a-title span {
  flex: 0 0 auto;
  margin: 0 0 15px;
  font-size: 32px;
  font-weight: 900;
  line-height: 1;
}
.a-title small {
  flex: 0 0 auto;
  font-size: 11px;
  font-weight: 400;
  line-height: 1;
}

@media screen and (min-width: 1024px) {
  .a-title {
    margin: 0 0 20px;
    padding: 0 0 48px;
  }
  .a-title::after {
    width: 74px;
    height: 2px;
  }
  .a-title span {
    margin: 0 0 22px;
    font-size: 40px;
  }
  .a-title small {
    font-size: 13px;
  }
}
.m-faq {
  position: relative;
}
.m-faq::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border-width: 0 0 195px 270px;
  border-style: solid;
  border-color: transparent transparent transparent rgba(95, 177, 222, 0.1);
}
.m-faq_inner {
  position: relative;
  z-index: 10;
  margin: 0 0 40px;
  padding: 30px 15px 0;
}
.m-faq_list {
  position: relative;
  margin: 0 0 15px;
  padding-right: 40px;
  font-size: 18px;
  font-weight: 400;
  background-color: #fff;
  cursor: pointer;
}
.m-faq_list.open::after {
  display: none;
}
.m-faq_list::before, .m-faq_list::after {
  content: "";
  position: absolute;
  background-color: #4D4D4D;
}
.m-faq_list::before {
  top: 27px;
  right: 10px;
  width: 17px;
  height: 2px;
}
.m-faq_list::after {
  top: 20px;
  right: 18px;
  width: 2px;
  height: 17px;
}
.m-faq_list dt::before, .m-faq_list dd::before {
  position: absolute;
  content: "";
  font-size: 28px;
}
.m-faq_list dt {
  position: relative;
  margin: 0 0 10px;
  padding: 15px 0 15px 40px;
}
.m-faq_list dt::before {
  content: "Q";
  top: 7px;
  left: 10px;
  color: #5FB1DE;
}
.m-faq_list dd {
  display: none;
  position: relative;
  padding: 0 0 15px 70px;
}
.m-faq_list dd::before {
  content: "A";
  top: -8px;
  left: 40px;
  color: #DE5F5F;
}

@media screen and (min-width: 1024px) {
  .m-faq::before {
    content: "";
    position: absolute;
    top: 0;
    left: -60px;
    width: 0;
    height: 0;
    border-width: 0 0 287px 397px;
  }
  .m-faq_inner {
    padding: 60px 30px 0;
  }
  .m-faq_list {
    position: relative;
    margin: 0 0 15px;
    padding-right: 60px;
    font-size: 23px;
  }
  .m-faq_list::before {
    top: 29px;
    right: 24px;
    width: 20px;
    height: 2px;
  }
  .m-faq_list::after {
    top: 20px;
    right: 33px;
    width: 2px;
    height: 20px;
  }
  .m-faq_list dt {
    position: relative;
    padding: 17px 60px 17px 72px;
  }
  .m-faq_list dt::before {
    top: 11px;
    left: 26px;
    color: #5FB1DE;
  }
  .m-faq_list dd {
    position: relative;
    padding: 0 0 17px 82px;
  }
  .m-faq_list dd::before {
    top: -4px;
    left: 45px;
  }
}
@media screen and (min-width: 1100px) {
  .m-faq_inner {
    margin: 0 0 100px;
    padding: 60px 0 0;
  }
}
.m-button {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  width: 270px;
  height: 60px;
  background-color: #5FB1DE;
  border-radius: 3px;
  box-shadow: 4px 4px 1px rgba(0, 0, 0, 0.1);
  transition: 0.3s ease;
}
.m-button:hover {
  opacity: 0.6;
}
.m-button span {
  position: relative;
  flex: 0 0 auto;
  padding-right: 60px;
  font-size: 24px;
  color: #fff;
  font-weight: 500;
  line-height: 1;
}
.m-button span::before {
  content: "";
  position: absolute;
  top: 50%;
  right: 0;
  margin-top: 5px;
  width: 40px;
  height: 2px;
  background-color: #fff;
}
.m-button span::after {
  content: "";
  position: absolute;
  top: 50%;
  right: -3px;
  width: 16px;
  height: 2px;
  background-color: #fff;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

@media screen and (min-width: 768px) {
  .m-button {
    width: 290px;
    height: 70px;
  }
  .m-button span {
    padding-right: 40px;
    font-size: 27px;
  }
  .m-button span::before {
    right: -25px;
    margin-top: 1px;
    width: 46px;
  }
  .m-button span::after {
    right: -28px;
    margin-top: -5px;
    width: 19px;
    height: 2px;
  }
}
@-webkit-keyframes fade {
  0% {
    opacity: 0;
    -webkit-transform: rotateX(-30deg) rotateY(-50deg) translate3d(-20px, -20px, 200px) scale(1.2);
            transform: rotateX(-30deg) rotateY(-50deg) translate3d(-20px, -20px, 200px) scale(1.2);
  }
  100% {
    opacity: 1;
    -webkit-transform: rotateX(0deg) rotateY(0deg) translate3d(0px, 0px, 0px) scale(1);
            transform: rotateX(0deg) rotateY(0deg) translate3d(0px, 0px, 0px) scale(1);
  }
}
@keyframes fade {
  0% {
    opacity: 0;
    -webkit-transform: rotateX(-30deg) rotateY(-50deg) translate3d(-20px, -20px, 200px) scale(1.2);
            transform: rotateX(-30deg) rotateY(-50deg) translate3d(-20px, -20px, 200px) scale(1.2);
  }
  100% {
    opacity: 1;
    -webkit-transform: rotateX(0deg) rotateY(0deg) translate3d(0px, 0px, 0px) scale(1);
            transform: rotateX(0deg) rotateY(0deg) translate3d(0px, 0px, 0px) scale(1);
  }
}
.m-fusen {
  padding: 0 15px;
}
.m-fusen ul {
  display: flex;
  flex-direction: column;
}
.m-fusen ul li {
  position: relative;
  padding: 20px;
  margin: 0 0 40px;
  border-width: 1px;
  border-style: solid;
  border-color: #ccc;
}
.m-fusen_item {
  opacity: 0;
}
.m-fusen_item.on {
  -webkit-animation: fade 1.2s ease forwards;
          animation: fade 1.2s ease forwards;
}
.m-fusen_button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 150px;
  height: 50px;
  font-size: 16px;
  color: #fff;
  background-color: #5FB1DE;
  cursor: pointer;
  border-radius: 3px;
  transition: 0.3s ease;
}
.m-fusen_button:hover {
  opacity: 0.6;
}

@media screen and (min-width: 768px) {
  .m-fusen ul {
    flex-direction: row;
    justify-content: space-between;
  }
  .m-fusen ul li {
    width: 32%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
